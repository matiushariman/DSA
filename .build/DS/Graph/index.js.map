{
  "version": 3,
  "sources": ["../../../DS/Graph/index.ts"],
  "sourcesContent": ["import { runFunctionWithEdges } from '../../utils';\n\nconst Graph = () => {\n  let numberOfNodes: number = 0;\n  const adjacentList: {[key: string]: string[]} = {};\n\n  /** add vertex **/\n  function addVertex(node: string) {\n    adjacentList[node] = [];\n    numberOfNodes++;\n    console.log(`After adding vertex ${node}:`);\n    console.log(JSON.stringify(adjacentList, null, 2));\n  }\n\n  /** add edge to vertex **/\n  function addEdge(node1:string, node2:string) {\n    adjacentList[node1].push(node2);\n    adjacentList[node2].push(node1);\n\n    console.log('After adding edge: ');\n    console.log(JSON.stringify(adjacentList, null, 2));\n  }\n\n  return {\n    addVertex,\n    addEdge,\n  };\n}\n\nfunction main() {\n  const graph = Graph();\n  graph.addVertex('0');\n  graph.addVertex('1');\n  graph.addVertex('2');\n  graph.addVertex('3');\n  graph.addVertex('4');\n  graph.addEdge('0', '2');\n}\n\nexport function runGraph() {\n  runFunctionWithEdges('Graph')(main);\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,mBAAqC;AAErC,MAAM,QAAQ,MAAM;AAClB,MAAI,gBAAwB;AAC5B,QAAM,eAA0C;AAGhD,qBAAmB,MAAc;AAC/B,iBAAa,QAAQ;AACrB;AACA,YAAQ,IAAI,uBAAuB;AACnC,YAAQ,IAAI,KAAK,UAAU,cAAc,MAAM;AAAA;AAIjD,mBAAiB,OAAc,OAAc;AAC3C,iBAAa,OAAO,KAAK;AACzB,iBAAa,OAAO,KAAK;AAEzB,YAAQ,IAAI;AACZ,YAAQ,IAAI,KAAK,UAAU,cAAc,MAAM;AAAA;AAGjD,SAAO;AAAA,IACL;AAAA,IACA;AAAA;AAAA;AAIJ,gBAAgB;AACd,QAAM,QAAQ;AACd,QAAM,UAAU;AAChB,QAAM,UAAU;AAChB,QAAM,UAAU;AAChB,QAAM,UAAU;AAChB,QAAM,UAAU;AAChB,QAAM,QAAQ,KAAK;AAAA;AAGd,oBAAoB;AACzB,yCAAqB,SAAS;AAAA;",
  "names": []
}
