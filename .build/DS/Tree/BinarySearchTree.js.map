{
  "version": 3,
  "sources": ["../../../DS/Tree/BinarySearchTree.ts"],
  "sourcesContent": ["import { printStart, printEnd } from '../../utils';\n\ntype MyNodeProps = {\n  left: MyNodeProps,\n  right: MyNodeProps,\n  value: number,\n} | null;\n\nconst MyNode = (value:number): MyNodeProps => ({\n  left: null,\n  right: null,\n  value,\n});\n\nconst BinarySearchTree = () => {\n  let root: MyNodeProps = null;\n\n  /** insert new node to tree **/\n  function insert(value: number) {\n    const newNode = MyNode(value);\n    \n    if (!root) {\n      root = newNode;\n    } else {\n      let currentNode = root;\n\n      while (currentNode) {\n        if (value < currentNode.value) {\n          if (!currentNode.left) {\n            currentNode.left = newNode;\n            break;\n          }\n  \n          currentNode = currentNode.left;\n        } else {\n          if (!currentNode.right) {\n            currentNode.right = newNode;\n            break;\n          }\n\n          currentNode = currentNode.right;\n        }\n      }\n    }\n\n    console.log(`After inserting ${value}:`);\n    console.log(JSON.stringify(root, null, 2));\n  }\n\n  function lookup(value:number) {\n  }\n  \n  return {\n    insert,\n    lookup,\n  };\n};\n\nexport function runBinarySearchTree() {\n  const sectionName = 'Binary Search Tree';\n  printStart(sectionName);\n  const bst = BinarySearchTree();\n  bst.insert(10);\n  bst.insert(8);\n  bst.insert(12);\n  \n  printEnd(sectionName);\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,mBAAqC;AAQrC,MAAM,SAAS,CAAC,UAA+B;AAAA,EAC7C,MAAM;AAAA,EACN,OAAO;AAAA,EACP;AAAA;AAGF,MAAM,mBAAmB,MAAM;AAC7B,MAAI,OAAoB;AAGxB,kBAAgB,OAAe;AAC7B,UAAM,UAAU,OAAO;AAEvB,QAAI,CAAC,MAAM;AACT,aAAO;AAAA,WACF;AACL,UAAI,cAAc;AAElB,aAAO,aAAa;AAClB,YAAI,QAAQ,YAAY,OAAO;AAC7B,cAAI,CAAC,YAAY,MAAM;AACrB,wBAAY,OAAO;AACnB;AAAA;AAGF,wBAAc,YAAY;AAAA,eACrB;AACL,cAAI,CAAC,YAAY,OAAO;AACtB,wBAAY,QAAQ;AACpB;AAAA;AAGF,wBAAc,YAAY;AAAA;AAAA;AAAA;AAKhC,YAAQ,IAAI,mBAAmB;AAC/B,YAAQ,IAAI,KAAK,UAAU,MAAM,MAAM;AAAA;AAGzC,kBAAgB,OAAc;AAAA;AAG9B,SAAO;AAAA,IACL;AAAA,IACA;AAAA;AAAA;AAIG,+BAA+B;AACpC,QAAM,cAAc;AACpB,+BAAW;AACX,QAAM,MAAM;AACZ,MAAI,OAAO;AACX,MAAI,OAAO;AACX,MAAI,OAAO;AAEX,6BAAS;AAAA;",
  "names": []
}
